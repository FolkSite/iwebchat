<style lang="less">
</style>
<template>
  <view class="container">

    <view class="doc-title">SELECT</view>

    <view class="dj-panel-title">基础用法</view>
    <view class="dj-panel">
      <view>
        <Select1
          :items.sync="items"
          :checkedValue.sync="checkedValue1"
          componentId="base"
          :handleSelectChange.sync="handleSelectChange"
        ></Select1>
      </view>
    </view>

    <view class="dj-panel-title">自定义高亮颜色</view>
    <view class="dj-panel">
      <view>
        <Select2
          :items.sync="items"
          :checkedValue.sync="checkedValue2"
          :activeColor.sync='activeColor'
          componentId="color"
          :handleSelectChange.sync="handleSelectChange"
        ></Select2>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  // import List from '../components/list'
  import Select1 from '@/components/wepy-select/index' // alias example
  // import Counter from 'counter' // alias example
  // import Group from '../components/group'
  // import Toast from 'wepy-com-toast'
  // import testMixin from '../mixins/test'

  export default class Select extends wepy.page {
    constructor(){
      super();
      this.handleSelectChange=this.handleSelectChange.bind(this);
    }
    config = {
      navigationBarTitleText: "Select 选择"
    }
    computed={
      checkedValue1(){
        return this.checked.base;
      },
      checkedValue2(){
        return this.checked.color;
      }
    }
    components = {
      Select1: Select1,
      Select2: Select1,
      // counter1: Counter,
      // counter2: Counter,
      // list: List,
      // group: Group,
      // toast: Toast
    }

    //mixins = [testMixin]

    data = {
      items: [
        {
          padding: 0,
          value: '1',
          name: '选项一',
        },
        {
          padding: 0,
          value: '2',
          name: '选项二',
        },
      ],

      checked: {
        base: '1',
        color: '1'
      },

      activeColor: '#4b0'
    }

    methods = {

    }
    handleSelectChange({ componentId, value }) {
        this.checked[componentId]=value;
        this.$apply();
    }
    events = {
    }

    onLoad() {
    }
  }
</script>
